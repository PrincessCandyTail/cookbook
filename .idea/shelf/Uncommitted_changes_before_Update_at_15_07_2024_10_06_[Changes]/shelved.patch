Index: backend/cookbook/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=cookbook\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/backend/cookbook/src/main/resources/application.properties b/backend/cookbook/src/main/resources/application.properties
--- a/backend/cookbook/src/main/resources/application.properties	(revision fcf256e60f23e0366ac16de7d8f6be9e152085b1)
+++ b/backend/cookbook/src/main/resources/application.properties	(date 1721027864040)
@@ -1,1 +1,7 @@
 spring.application.name=cookbook
+spring.datasource.url=jdbc:mariadb://localhost:3306/cookbook
+spring.datasource.username=root
+spring.datasource.password=mariadb
+spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
+
+spring.jpa.hibernate.ddl-auto=create-drop
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/IngredientRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/IngredientRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/IngredientRepository.java
new file mode 100644
--- /dev/null	(date 1721029438453)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/IngredientRepository.java	(date 1721029438453)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Ingredient;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface IngredientRepository extends JpaRepository<Ingredient, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/GroupRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/GroupRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/GroupRepository.java
new file mode 100644
--- /dev/null	(date 1721029438445)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/GroupRepository.java	(date 1721029438445)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Group;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface GroupRepository extends JpaRepository<Group, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/DescriptionRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/DescriptionRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/DescriptionRepository.java
new file mode 100644
--- /dev/null	(date 1721029438415)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/DescriptionRepository.java	(date 1721029438415)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Description;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface DescriptionRepository extends JpaRepository<Description, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/BookRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/BookRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/BookRepository.java
new file mode 100644
--- /dev/null	(date 1721029287809)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/BookRepository.java	(date 1721029287809)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Book;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface BookRepository extends JpaRepository<Book, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UserRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UserRepository.java
new file mode 100644
--- /dev/null	(date 1721029438432)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UserRepository.java	(date 1721029438432)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.User;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface UserRepository extends JpaRepository<User, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UnitRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UnitRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UnitRepository.java
new file mode 100644
--- /dev/null	(date 1721029438423)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/UnitRepository.java	(date 1721029438423)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Unit;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface UnitRepository extends JpaRepository<Unit, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/RecipeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/RecipeRepository.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/RecipeRepository.java
new file mode 100644
--- /dev/null	(date 1721029438440)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/repositories/RecipeRepository.java	(date 1721029438440)
@@ -0,0 +1,7 @@
+package ch.axa.its.cookbook.repositories;
+
+import ch.axa.its.cookbook.domain.Recipe;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface RecipeRepository extends JpaRepository<Recipe, String> {
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Recipe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Recipe.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Recipe.java
new file mode 100644
--- /dev/null	(date 1721030732962)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Recipe.java	(date 1721030732962)
@@ -0,0 +1,42 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.HashSet;
+import java.util.Set;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "recipe")
+public class Recipe {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String title;
+
+  // TODO: Image upload
+
+  private int duration;
+
+  private int difficulty;
+
+  @Column(name = "portion_amount")
+  private int portionAmount;
+
+  @ManyToMany(mappedBy = "recipes")
+  private Set<Book> books = new HashSet<>();
+
+  @OneToMany(mappedBy = "recipe")
+  private Set<Ingredient> ingredients = new HashSet<>();
+
+  @OneToMany(mappedBy = "recipe")
+  private Set<Description> descriptions = new HashSet<>();
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Book.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Book.java
new file mode 100644
--- /dev/null	(date 1721030465579)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Book.java	(date 1721030465579)
@@ -0,0 +1,35 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.HashSet;
+import java.util.Set;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "book")
+public class Book {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String title;
+
+  @ManyToMany(mappedBy = "books")
+  Set<Group> groups = new HashSet<>();
+
+  @ManyToMany
+  @JoinTable(
+          name = "book_recipe",
+          joinColumns = @JoinColumn(name = "book_id"),
+          inverseJoinColumns = @JoinColumn(name = "recipe_id")
+  )
+  private Set<Recipe> recipes = new HashSet<>();
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Group.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Group.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Group.java
new file mode 100644
--- /dev/null	(date 1721030465562)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Group.java	(date 1721030465562)
@@ -0,0 +1,40 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.HashSet;
+import java.util.Set;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "application_group")
+public class Group {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String name;
+
+  @ManyToMany
+  @JoinTable(
+          name = "group_user",
+          joinColumns = @JoinColumn(name = "group_id"),
+          inverseJoinColumns = @JoinColumn(name = "user_id")
+  )
+  private Set<User> users = new HashSet<>();
+
+  @ManyToMany
+  @JoinTable(
+          name = "group_book",
+          joinColumns = @JoinColumn(name = "group_id"),
+          inverseJoinColumns = @JoinColumn(name = "book_id")
+  )
+  private Set<Book> books = new HashSet<>();
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision fcf256e60f23e0366ac16de7d8f6be9e152085b1)
+++ b/.idea/misc.xml	(date 1721027684740)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager">
+  <component name="ProjectRootManager" version="2" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/User.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/User.java
new file mode 100644
--- /dev/null	(date 1721030042245)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/User.java	(date 1721030042245)
@@ -0,0 +1,26 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.*;
+
+import java.util.HashSet;
+import java.util.Set;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "application_user")
+public class User {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String username;
+
+  private String password_hash;
+
+  @ManyToMany(mappedBy = "users")
+  private Set<Group> groups = new HashSet<>();
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Unit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Unit.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Unit.java
new file mode 100644
--- /dev/null	(date 1721029244405)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Unit.java	(date 1721029244405)
@@ -0,0 +1,21 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "book")
+public class Unit {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String name;
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Description.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Description.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Description.java
new file mode 100644
--- /dev/null	(date 1721030732955)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Description.java	(date 1721030732955)
@@ -0,0 +1,28 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "book")
+public class Description {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private int order_number;
+
+  private String title;
+
+  private String description;
+
+  @ManyToOne
+  private Recipe recipe;
+}
Index: backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Ingredient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Ingredient.java b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Ingredient.java
new file mode 100644
--- /dev/null	(date 1721030696301)
+++ b/backend/cookbook/src/main/java/ch/axa/its/cookbook/domain/Ingredient.java	(date 1721030696301)
@@ -0,0 +1,26 @@
+package ch.axa.its.cookbook.domain;
+
+import jakarta.persistence.*;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+@Table(name = "ingredient")
+public class Ingredient {
+  @Id
+  @GeneratedValue(strategy = GenerationType.UUID)
+  private String id;
+
+  private String name;
+
+  private String amount;
+
+  @ManyToOne
+  private Recipe recipe;
+}
Index: backend/docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docker-compose.yml b/backend/docker-compose.yml
new file mode 100644
--- /dev/null	(date 1721027930246)
+++ b/backend/docker-compose.yml	(date 1721027930246)
@@ -0,0 +1,30 @@
+version: '3.8'
+
+volumes:
+  mariadb-data:
+
+services:
+  db:
+    image: mariadb:10.7
+    restart: unless-stopped
+    ports:
+      - 3306:3306
+    volumes:
+      - mariadb-data:/var/lib/mysql
+    environment:
+      MYSQL_ROOT_PASSWORD: mariadb
+      MYSQL_DATABASE: mariadb
+      MYSQL_USER: mariadb
+      MYSQL_PASSWORD: mariadb
+
+  phpmyadmin:
+    image: phpmyadmin
+    restart: unless-stopped
+    ports:
+      - 8090:80
+    environment:
+      - PMA_ARBITRARY=0
+      - PMA_HOST=db
+      - PMA_PORT=3306
+      - PMA_USER=root
+      - PMA_PASSWORD=mariadb
\ No newline at end of file
